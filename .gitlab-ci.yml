---
stages:
  - lint
  - test
  - Build docs
  - Build release container
  - Build additional release containers
  - Upload docs

check labels:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA)
    - python ./scripts/check-labels.py $FLIST
  only:
    - merge_requests
  tags:
    - docker

flake8:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA  | egrep ".py$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        flake8 $FLIST;
      else
        echo "No files to lint"
        true;
      fi
  only:
    - merge_requests
  tags:
    - docker

black:
  stage: lint
  image: registry.getnoc.com/infrastructure/black:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --diff-filter=d --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA  | egrep ".py$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        black --check $FLIST;
      else
        echo "No files to lint"
        true;
      fi
  only:
    - merge_requests
  tags:
    - docker
  allow_failure: false

mypy:
  stage: lint
  image: registry.getnoc.com/infrastructure/mypy:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --diff-filter=d --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA  | egrep ".py$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        mypy --py2 --follow-imports=skip --ignore-missing-imports $FLIST;
      else
        echo "No files to lint"
        true;
      fi
  only:
    - merge_requests
  tags:
    - docker
  allow_failure: true

prettier:
  stage: lint
  image: registry.getnoc.com/infrastructure/prettier:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --diff-filter=d --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA  | egrep "\.(js|json|yml|css)$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        /usr/local/bin/prettier --config=.prettierrc --check $FLIST
      else
        echo "No files to lint"
        true;
      fi
  only:
    - merge_requests
  tags:
    - docker
  allow_failure: true

# waiting for https://github.com/rubik/xenon/issues/21
xenon:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA | egrep ".py$" | grep -v ".docker/"|| true)
    - x=0
    - >
      if [ ! -z "$FLIST" ];
      then
        for i in "${FLIST}";
        do
          (xenon --max-absolute B --max-modules B --max-average B "$i"; let x+=$?);
        done;
      fi
    - if [ "$x" -gt 0 ] ; then exit 1; fi
  only:
    - merge_requests
  tags:
    - docker
  allow_failure: true

pylint:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA | egrep ".py$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        pylint "$FLIST";
      else
        echo "No files to lint"
        true;
      fi
  only:
    - merge_requests
  tags:
    - docker

pylint3k:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA | egrep ".py$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        pylint --py3k "$FLIST";
      else
        echo "No files to lint"
        true;
      fi
  only:
    - merge_requests
  tags:
    - docker

bandit:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA | egrep ".py$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        bandit "$FLIST";
      else
        echo "No files to lint"
        true;
      fi
  only:
    - merge_requests
  tags:
    - docker
  allow_failure: true

caniusepython3:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - caniusepython3 -r requirements/*.txt
  only:
    - merge_requests
  tags:
    - docker
  allow_failure: true
  when: manual

futurize:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA | egrep ".py$" | grep -v ".docker/"|| true)
    - /bin/future.sh "$FLIST"
  only:
    - merge_requests
  tags:
    - docker

futurize stage2:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - FLIST=$(git --no-pager diff --name-only $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) $CI_COMMIT_SHA | egrep ".py$" | grep -v ".docker/"|| true)
    - /bin/future2.sh "$FLIST"
  only:
    - merge_requests
  tags:
    - docker
  allow_failure: true

Test migrate:
  stage: test
  before_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
  script:
    # see docker/docker-compose.yml for complete list of migrations
    - >
     docker
     login
     -u gitlab-ci-token
     -p ${CI_BUILD_TOKEN}
     ${CI_REGISTRY}
    - >
     docker-compose
     -f .docker/docker-compose.yml
     -p "${DOCKER_COMPOSE_PROJECT}-migrate"
     build migrate
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-migrate"
      up
      --exit-code-from migrate
      migrate
  after_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-migrate"
      down -v
  only:
    refs:
      - merge_requests
      - master
      - /^release-\d+\.\d+/
  tags:
    - shell
  allow_failure: false

Test code:
  stage: test
  before_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - mv .dockerignore .dockerignore.prod
    - cp .dockerignore.tests .dockerignore
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-tests"
      build tests
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-tests"
      up
      --exit-code-from tests
      tests
  after_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - mv .dockerignore.prod .dockerignore
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-tests"
      down -v
  only:
    refs:
      - merge_requests
      - master
      - /^release-\d+\.\d+/
  tags:
    - shell
  allow_failure: false
  artifacts:
    paths:
      - collections/
    expire_in: 1 day

Test python 3:
  stage: test
  before_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - mv .dockerignore .dockerignore.prod
    - cp .dockerignore.tests .dockerignore
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    # see docker/docker-compose.yml for complete list of migrations
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-py3"
      build python3
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-py3"
      up
      --exit-code-from python3
      python3
  after_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - mv .dockerignore.prod .dockerignore
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-py3"
      down -v
  tags:
    - shell
  allow_failure: true
  when: manual

Build docs:
  stage: Build docs
  environment: docs
  image: registry.getnoc.com/infrastructure/docs:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $CI_COMMIT_SHA $(git merge-base origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA) | egrep "^docs/" || true)
    - >
      if [ ! -z "$FLIST" ];
      then
        wget -q -O- https://cdn.getnoc.com/noc/collections%40$(wget -q -O- https://cdn.getnoc.com/noc/collections.latest).tar.bz2 | tar xjf - collections/inv.platforms
        cd docs/
        python ./scripts/build-auto-include.py
        sphinx-build -a -E -b html src/en ../build/docs/en
        python ./scripts/build-go.py ../build/docs/en/objects.inv
      else
        echo "No doc changes to build"
        true;
      fi
  tags:
    - docker
  artifacts:
    paths:
      - build/docs/en
    expire_in: 2 hours
  only:
    - merge_requests

Build Master Docs:
  stage: Build docs
  environment: docs
  image: registry.getnoc.com/infrastructure/docs:master
  script:
    - set -x
    - wget -q -O- https://cdn.getnoc.com/noc/collections%40$(wget -q -O- https://cdn.getnoc.com/noc/collections.latest).tar.bz2 | tar xjf - collections/inv.platforms
    - cd docs/
    - python ./scripts/build-auto-include.py
    - NOC_SRC_PATH=../../.. sphinx-build -a -E -b html src/en ../build/docs/en
    - python ./scripts/build-go.py ../build/docs/en/objects.inv
  tags:
    - docker
  artifacts:
    paths:
      - build/docs/en
    expire_in: 2 hours
  only:
    refs:
      - master
      - /^release-\d+\.\d+/

Build release image:
  stage: Build release container
  before_script:
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    # registry.getnoc.com/noc/noc/code:stable
    - docker build --target code -t $CI_REGISTRY_IMAGE/code:$CI_COMMIT_TAG -f .docker/Dockerfile .
    # registry.getnoc.com/noc/noc/dev:stable
    - docker build --target dev -t $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_TAG -f .docker/Dockerfile .
    # registry.getnoc.com/noc/noc/static:stable
    - docker build --target static -t $CI_REGISTRY_IMAGE/static:$CI_COMMIT_TAG -f .docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/code:$CI_COMMIT_TAG 
    - docker push $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_TAG 
    - docker push $CI_REGISTRY_IMAGE/static:$CI_COMMIT_TAG
    - docker rmi $CI_REGISTRY_IMAGE/code:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/static:$CI_COMMIT_TAG
  tags:
    - shell
  only:
    - tags

upload docs:
  stage: Upload docs
  environment: docs
  image: registry.getnoc.com/infrastructure/s3helper:master
  script:
    - /tmp/mc -q cp -r build/docs/* cdn/$S3_BUCKET/$CI_COMMIT_REF_SLUG
  tags:
    - docker
  only:
    refs:
      - master
      - /^release-\d+\.\d+/
