# -*- coding: utf-8 -*-
# ----------------------------------------------------------------------
# AlarmClass dictionary test
# ----------------------------------------------------------------------
# Copyright (C) 2007-2019 The NOC Project
# See LICENSE for details
# ----------------------------------------------------------------------

# Third-party modules
import pytest

# NOC modules
from noc.core.clickhouse.fields import BaseField
from noc.core.bi.dictionaries.alarmclass import AlarmClass


MODEL = AlarmClass
FIELDS = [("name", "String")]
CONFIG = """<dictionaries>
    <comment>Generated by NOC, do not change manually</comment>
    <dictionary>
        <name>alarmclass</name>
        <lifetime>
            <min>3600</min>
            <max>3600</max>
        </lifetime>
        <layout>
            <flat />
        </layout>
        <source>
            <http>
                <url>http://{{ range $index, $element := service "datasource~_agent"}}{{if eq $index 0}}{{.Address}}:{{.Port}}{{end}}{{else}}127.0.0.1:65535{{ end }}/api_datasource/ch_alarmclass.tsv</url>
                <format>TabSeparated</format>
            </http>
        </source>
        <structure>
             <id>
                 <name>bi_id</name>
             </id>
             <attribute>
                 <name>id</name>
                 <type>String</type>
                 <hierarchical>false</hierarchical>
             </attribute>
             <attribute>
                 <name>name</name>
                 <type>String</type>
                 <null_value>Unknown</null_value>
                 <hierarchical>false</hierarchical>
             </attribute>
        </structure>
    </dictionary>
</dictionaries>"""


@pytest.mark.parametrize("name,db_type", FIELDS)
def test_field_db_type(name, db_type):
    field_name, nested_name = BaseField.nested_path(name)
    assert MODEL._meta.fields[field_name].get_db_type(nested_name) == db_type


def test_get_config():
    assert MODEL.get_config() == CONFIG
